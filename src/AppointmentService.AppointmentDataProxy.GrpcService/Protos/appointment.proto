syntax = "proto3";

package appointment_data_proxy.appointment;

option csharp_namespace = "AppointmentService.AppointmentDataProxy.GrpcService.Protos";

import "Protos/common.proto";
import "google/protobuf/timestamp.proto";

message Appointment {
  int32 id = 1;
  google.protobuf.Timestamp start = 2;
  google.protobuf.Timestamp end = 3;
  string patient_insurance_number = 4;
  int32 therapist_id = 5;
  string practice_institution_code = 6;
  oneof remedy {
    string fixed_remedy_diagnosis_code = 7;
    int32 individual_remedy_id = 8;
  }
}

message AppointmentFilter {
  optional appointment_data_proxy.common.Int32Filter id = 1;
  optional appointment_data_proxy.common.GoogleTimestampFilter start = 2;
  optional appointment_data_proxy.common.GoogleTimestampFilter end = 3;
  optional appointment_data_proxy.common.Int32Filter therapist_id = 4;
  optional appointment_data_proxy.common.StringFilter practice_institution_code = 5;
}

message GetAppointmentRequest {
  optional int32 id = 1;
}

message StreamAppointmentsRequest {
  optional AppointmentFilter filter = 1;
}

message CreateAppointmentRequest { Appointment appointment = 1; }
message UpdateAppointmentRequest { Appointment appointment = 1; }
message DeleteAppointmentRequest { int32 id = 1; }

message GetAppointmentResponse { Appointment appointment = 1;}

message CreateAppointmentResponse {}
message UpdateAppointmentResponse {}
message DeleteAppointmentResponse {}

service AppointmentService {
  rpc Get(GetAppointmentRequest) returns (GetAppointmentResponse);
  rpc Stream(StreamAppointmentsRequest) returns (stream Appointment);

  rpc Create(CreateAppointmentRequest) returns (CreateAppointmentResponse);
  rpc Update(UpdateAppointmentRequest) returns (UpdateAppointmentResponse);
  rpc Delete(DeleteAppointmentRequest) returns (DeleteAppointmentResponse);
}